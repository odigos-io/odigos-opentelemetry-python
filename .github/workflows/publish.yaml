name: Publish Python Package

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install build tools
        run: |
          pip install build twine

      - name: Verify version matches tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # strip off the ‚Äúrefs/tags/‚Äù prefix, then the leading ‚Äúv‚Äù
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=${TAG#v}
          echo "üîç Checking setup.py version == ${VERSION} (from tag ${TAG})"
          if ! grep -qE "version\s*=\s*['\"]${VERSION}['\"]" setup.py; then
            echo "‚ùå setup.py version does not match tag (${TAG})"
            exit 1
          fi
          echo "‚úÖ setup.py version matches tag (${TAG})"

      - name: Validate setup.py instrumentation lines
        run: |
          for d in instrumentations/opentelemetry-instrumentation-*; do
            inst=${d#*/opentelemetry-instrumentation-}
            grep -q "odigos-opentelemetry-instrumentation-$inst" setup.py \
              || { echo "‚ùå setup.py missing odigos-opentelemetry-instrumentation-$inst"; exit 1; }
          done

      - name: Build all instrumentations
        run: make build-instrumentations

      - name: Publish patched instrumentations
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          for d in instrumentations/opentelemetry-instrumentation-*; do
            echo "‚û°Ô∏è Publishing $(basename $d)"
            # Using --skip-existing in order to skip already uploaded instrumentation,
            # In order to overwrite, a package needs to be removed manually from the PyPi
            twine upload --skip-existing --non-interactive "$d/dist/*"
          done

      - name: Build the package
        run: |
          python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload --non-interactive dist/*
