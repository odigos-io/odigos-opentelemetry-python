name: build

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Verify version matches tag
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=${TAG#v}
          echo "üîç Checking setup.py version==$VERSION (from tag $TAG)"
          if ! grep -qE "version=['\"]${VERSION}['\"]" setup.py; then
            echo "‚ùå setup.py version does not match tag ($TAG)"
            exit 1
          fi
          echo "‚úÖ setup.py version matches tag ($TAG)"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Validate setup.py instrumentation lines
        run: |
          # find all instrumentations
          for d in instrumentations/opentelemetry-instrumentation-*; do
            inst=${d#*/opentelemetry-instrumentation-}
            grep -q "odigos-opentelemetry-instrumentation-$inst" setup.py \
              || { echo "‚ùå setup.py missing odigos-opentelemetry-instrumentation-$inst"; exit 1; }
          done

      - name: Build all instrumentations
        run: make build-instrumentations

      - name: Install patched instrumentations
        run: |
          for d in instrumentations/opentelemetry-instrumentation-*; do
            echo "üîß Installing $(basename $d)"
            # pick up the locally built wheel and install it
            pip install "$d/dist/"*.whl
          done

      - name: Install in editable mode
        run: pip install -e .

      - name: Smoke check imports
        run: |
          python -c "import initializer"
          python -c "import opamp"
